@page "/jobs/create"
@using MudBlazor
@inject IJobRepository JobRepository
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudCard Elevation="3" Class="mt-4">
        <MudCardHeader>
            <MudText Typo="Typo.h5" Color="Color.Primary">Novo Job</MudText>
            <MudText Typo="Typo.body2" Color="Color.Secondary">Configure um novo job para execução agendada</MudText>
        </MudCardHeader>
        <MudCardContent>
            <JobForm Job="@job" IsProcessing="@isProcessing" OnValidSubmit="SalvarAsync" OnCancel="Cancelar" />
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private Job job = new();
    private bool isProcessing;

    protected override void OnInitialized() => job.Status = JobStatus.Pendente;

    private async Task SalvarAsync()
    {
        if (isProcessing) return;
        try
        {
            isProcessing = true;
            if (await JobRepository.ExistsByNameAsync(job.Name))
            {
                Snackbar.Add("Já existe um job com este nome!", Severity.Warning);
                return;
            }
            await JobRepository.AddAsync(job);
            await JobRepository.SaveChangesAsync();
            Snackbar.Add("Job criado com sucesso!", Severity.Success);
            Navigation.NavigateTo("/jobs");
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao salvar o job: {ex.Message}", Severity.Error);
        }
        finally
        {
            isProcessing = false;
        }
    }

    private void Cancelar() => Navigation.NavigateTo("/jobs");
}
