@page "/jobtarefas/create"
@inherits Saigor.Shared.Components.CrudPageBase<JobTarefaModel>
@using Saigor.Models
@using Saigor.Shared.Components
@inject ICrudService<JobModel> JobService
@inject ICrudService<TarefaModel> TarefaService
@inject ICrudService<ConexaoModel> ConexaoService

<CrudForm Title="Nova Associação Job-Tarefa"
          SaveButtonText="Salvar"
          OnSave="OnSave"
          OnCancel="OnCancel">
    <FormContent>
        <MudSelect T="int" Label="Job" @bind-Value="Item.JobId" Required="true">
            @foreach (var job in jobs.OrderBy(j => j.Ordem).ThenBy(j => j.Name))
            {
                <MudSelectItem Value="@job.Id">@job.Name</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="int" Label="Tarefa" @bind-Value="Item.TarefaId" Required="true">
            @foreach (var tarefa in tarefas)
            {
                <MudSelectItem Value="@tarefa.Id">@tarefa.Nome</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="int" Label="Conexão" @bind-Value="Item.ConexoesId" Required="true">
            @foreach (var conexao in conexoes)
            {
                <MudSelectItem Value="@conexao.Id">@conexao.Nome</MudSelectItem>
            }
        </MudSelect>
        <MudTextField @bind-Value="Item.Ordem" Label="Ordem" Required="true" />
    </FormContent>
</CrudForm>

@code {
    private List<JobModel> jobs = new();
    private List<TarefaModel> tarefas = new();
    private List<ConexaoModel> conexoes = new();
    
    protected override void OnInitialized()
    {
        Item = new JobTarefaModel();
        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        jobs = await JobService.GetAllAsync();
        tarefas = (await TarefaService.GetAllAsync()).OrderBy(t => t.Nome).ToList();
        conexoes = (await ConexaoService.GetAllAsync()).OrderBy(c => c.Nome).ToList();
    }

    private async Task OnSave()
    {
        var result = await CrudService.CreateAsync(Item);
        if (result)
            NavigationManager.NavigateTo("/jobtarefas");
        else
            ShowError("Erro ao criar associação Job-Tarefa.");
    }

    private void OnCancel() => NavigationManager.NavigateTo("/jobtarefas");
} 